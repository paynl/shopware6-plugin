<?xml version="1.0" ?>
<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">
    <services>
        <!-- Storefront Controller -->
        <service id="PaynlPayment\Shopware6\Controller\Storefront\CheckoutHistoryBack\CheckoutHistoryBackController" public="true">
            <argument type="service" id="request_stack"/>
            <call method="setContainer">
                <argument type="service" id="service_container"/>
            </call>
        </service>

        <service id="PaynlPayment\Shopware6\Controller\Storefront\Notification\NotificationController" public="true">
            <argument type="service" id="PaynlPayment\Shopware6\Helper\ProcessingHelper"/>
            <call method="setContainer">
                <argument type="service" id="service_container"/>
            </call>
        </service>

        <service id="PaynlPayment\Shopware6\Controller\Storefront\AccountOrder\AccountOrderController" public="true">
            <argument type="service" id="PaynlPayment\Shopware6\Helper\CustomerHelper"/>
            <call method="setContainer">
                <argument type="service" id="service_container"/>
            </call>
        </service>

        <service id="PaynlPayment\Shopware6\Controller\Storefront\Ideal\IdealExpressController" public="true">
            <argument type="service" id="PaynlPayment\Shopware6\Components\ExpressCheckoutUtil" />
            <argument type="service" id="PaynlPayment\Shopware6\Components\IdealExpress\IdealExpress" />
            <argument type="service" id="PaynlPayment\Shopware6\Service\CartService" />
            <argument type="service" id="PaynlPayment\Shopware6\Service\Cart\CartBackupService" />
            <argument type="service" id="PaynlPayment\Shopware6\Service\OrderService" />
            <argument type="service" id="PaynlPayment\Shopware6\Service\PaynlTransaction\PaynlTransactionService" />
            <argument type="service" id="Shopware\Storefront\Framework\Routing\Router"/>
            <argument type="service" id="session.flash_bag" on-invalid="null"/>

            <call method="setContainer">
                <argument type="service" id="service_container"/>
            </call>
        </service>

        <service id="PaynlPayment\Shopware6\Controller\Storefront\PayPal\PayPalExpressController" public="true">
            <argument type="service" id="PaynlPayment\Shopware6\Components\ExpressCheckoutUtil" />
            <argument type="service" id="PaynlPayment\Shopware6\Components\PayPalExpress\PayPalExpress" />
            <argument type="service" id="PaynlPayment\Shopware6\Service\CartService" />
            <argument type="service" id="PaynlPayment\Shopware6\Service\Cart\CartBackupService" />
            <argument type="service" id="Shopware\Storefront\Framework\Routing\Router"/>
            <argument type="service" id="Shopware\Core\System\SalesChannel\SalesChannel\ContextSwitchRoute"/>
            <argument type="service" id="Shopware\Core\Checkout\Cart\SalesChannel\CartDeleteRoute"/>
            <argument type="service" id="paynl_payments.logger"/>
            <argument type="service" id="session.flash_bag" on-invalid="null"/>

            <call method="setContainer">
                <argument type="service" id="service_container"/>
            </call>
        </service>

        <service id="PaynlPayment\Shopware6\Controller\Storefront\Payment\PaymentController" public="true">
            <argument type="service" id="Shopware\Core\Checkout\Payment\Controller\PaymentController"/>
            <argument type="service" id="paynl_payments.logger"/>
            <argument type="service" id="PaynlPayment\Shopware6\Repository\OrderTransaction\OrderTransactionRepository"/>
            <argument type="service" id="PaynlPayment\Shopware6\Repository\PaynlTransactions\PaynlTransactionsRepository"/>
            <call method="setContainer">
                <argument type="service" id="service_container"/>
            </call>
        </service>

        <!-- Admin API Controller -->
        <service id="PaynlPayment\Shopware6\Controller\Api\Config\ConfigController" public="true">
            <argument type="service" id="PaynlPayment\Shopware6\Components\Config"/>
            <argument type="service" id="PaynlPayment\Shopware6\Components\Api"/>
            <argument type="service" id="PaynlPayment\Shopware6\Helper\InstallHelper"/>
            <argument type="service" id="PaynlPayment\Shopware6\Helper\SettingsHelper"/>
            <call method="setContainer">
                <argument type="service" id="service_container"/>
            </call>
        </service>

        <service id="PaynlPayment\Shopware6\Controller\Api\Refund\RefundController" public="true">
            <argument type="service" id="PaynlPayment\Shopware6\Components\Api"/>
            <argument type="service" id="PaynlPayment\Shopware6\Helper\ProcessingHelper"/>
            <argument type="service" id="paynl_payments.logger"/>
            <argument type="service" id="product.repository"/>
            <argument type="service" id="paynl_transactions.repository"/>
            <call method="setContainer">
                <argument type="service" id="service_container"/>
            </call>
        </service>

        <service id="PaynlPayment\Shopware6\Controller\Api\StatusTransition\StatusTransitionController" public="true">
            <argument type="service" id="PaynlPayment\Shopware6\Components\Api"/>
            <argument type="service" id="PaynlPayment\Shopware6\Components\Config"/>
            <argument type="service" id="paynl_payments.logger"/>
            <argument type="service" id="PaynlPayment\Shopware6\Helper\ProcessingHelper"/>
            <argument type="service" id="paynl_transactions.repository"/>
            <call method="setContainer">
                <argument type="service" id="service_container"/>
            </call>
        </service>
    </services>
</container>
